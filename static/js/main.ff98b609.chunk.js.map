{"version":3,"sources":["componentes/Header.js","componentes/Noticia.js","componentes/Noticias.js","componentes/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","titulo","Noticia","_props$noticia","noticia","urlToImage","url","title","description","source","src","alt","name","target","rel","Noticias","this","noticias","map","componentes_Noticia","key","Component","Formulario","categoriaRef","React","createRef","cambiarCategoria","e","preventDefault","_this","consultarNoticias","current","value","onSubmit","ref","defaultValue","type","App","state","categoria","concat","fetch","then","respuesta","json","setState","articles","componentes_Header","componentes_Formulario","componentes_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff98b609.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header = (props) => {\n        return ( \n            <nav>\n                <div className=\"nav-wrapper light-blue darken-3\">\n                    <a href=\"#\" className=\"brand-logo center\">{props.titulo}</a>\n                </div>\n            </nav>\n        );\n}\n\n\nexport default Header;","import React from 'react';\n\nconst Noticia = (props) => {\n\n    const {urlToImage, url , title, description, source} = props.noticia;\n    \n    return (\n        <div className=\"col s12 m6 l4\">\n            <div className=\"card\">\n                <div className=\"card-image\">\n                    <img src={urlToImage} alt={title} />\n                    <span className=\"card-title\">{source.name}</span>\n                </div>\n                <div className=\"card-content\">\n                    <h3>{title}</h3>\n                    <p>{description}</p>\n                </div>\n                <div className=\"card-action\">\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"waves-effect waves-light btn\">\n                        Leer\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Noticia;","import React, { Component } from 'react';\nimport Noticia from './Noticia';\n\nclass Noticias extends Component {\n    render() {\n        return (\n            <div className=\"row\">\n                {this.props.noticias.map(noticia => (\n                    <Noticia \n                        key={noticia.url}\n                        noticia = {noticia}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Noticias;","import React, { Component } from 'react';\n\nclass Formulario extends Component {\n\n    categoriaRef = React.createRef();\n\n    cambiarCategoria = (e) =>{\n        e.preventDefault();\n\n        //Enviar por props\n\n        this.props.consultarNoticias(this.categoriaRef.current.value);\n    }\n    render() {\n        return (\n            <div className=\"buscador row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <form onSubmit={this.cambiarCategoria}>\n                        <h2>Noticias por categoría</h2>\n                        <div className=\"input-field col s12 m8\">\n                            <select ref={this.categoriaRef}>\n                                <option value=\"general\" defaultValue>General</option>\n                                <option value=\"business\" defaultValue>Negocios</option>\n                                <option value=\"entertainment\" defaultValue>Entretenimiento</option>\n                                <option value=\"health\" defaultValue>Salud</option>\n                                <option value=\"science\" defaultValue>Ciencia</option>\n                                <option value=\"sports\" defaultValue>Deportes</option>\n                                <option value=\"technology\" defaultValue>Tecnología</option>\n                            </select>\n                        </div>\n                        <div className=\"input-field col s12 m4 enviar\">\n                            <input type=\"submit\" className=\"btn amber darken-2\" value=\"Buscar\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Formulario;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Noticias from './componentes/Noticias';\nimport Formulario from './componentes/Formulario';\n\nclass App extends Component {\n\n  state = {\n    noticias: []\n  }\n  componentDidMount(){\n    this.consultarNoticias();\n  }\n\n  consultarNoticias = categoria =>{\n    let url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria }&apiKey=cefc4fe4c8584fe9a82181f7476caba0`;\n    \n    fetch(url)\n      .then(respuesta => {\n        return respuesta.json();\n      }).then(noticias =>{\n        this.setState({\n          noticias: noticias.articles\n        })\n      });\n  }\n\n  render() { \n    return ( \n      <div className=\"contenedor-app\">\n        <Header\n          titulo = \"Noticias\"\n        />\n        <div className=\"container white contenedor-noticias\">\n          <Formulario\n            consultarNoticias = {this.consultarNoticias}\n          />\n          <Noticias \n            noticias = {this.state.noticias}\n            \n          />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}